{"version":3,"sources":["components/UserInput/UserInput.js","components/Output/Output.js","components/Explanation/Explanation.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","onInputChange","onClickButton","className","onChange","type","placeholder","onClick","Output","fact","Explanation","App","event","setState","input","target","value","url","state","trim","fetch","then","response","json","data","text","catch","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAeeA,EAZG,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAClC,OACC,sBAAKC,UAAU,eAAf,UACO,uBACCC,SAAUH,EACVI,KAAK,SACLC,YAAY,gBACb,wBAAQC,QAASL,EAAeG,KAAK,SAArC,0BCGMG,G,MAVA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OACC,sBAAKN,UAAU,gBAAf,UACO,uCACA,uBACE,4BAAIM,SCiCAC,G,MArCK,WACnB,OACC,sBAAKP,UAAU,UAAf,UACC,kDACK,sBAAKA,UAAU,cAAf,UACE,wFACyD,iDADzD,OAGA,mBAAGA,UAAU,cAAb,6BAGA,qBAAIA,UAAU,OAAd,UACE,0CACA,4CACA,qEAEF,oBAAGA,UAAU,cAAb,iDACsC,uBADtC,yBAIA,qBAAIA,UAAU,QAAd,UACE,yCACA,uCACA,0CACA,0CAEF,mBAAGA,UAAU,iBAAb,kDAGA,mBAAGA,UAAU,iBAAb,qDCWKQ,G,wDArCb,aAAc,IAAD,8BACX,gBAOFV,cAAgB,SAACW,GACf,EAAKC,SAAS,CAACC,MAAOF,EAAMG,OAAOC,SATxB,EAYbd,cAAgB,SAACU,GACf,IAAMK,EAAM,yBAA2B,EAAKC,MAAMJ,MAAMK,OAAS,QACjEC,MAAMH,GACHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKX,SAAS,CAACJ,KAAMe,EAAKC,UACvCC,OAAM,kBAAM,EAAKb,SAAS,CAACJ,KAAM,mCAfpC,EAAKS,MAAM,CACPJ,MAAO,GACPL,KAAM,IAJC,E,0CAoBb,WACE,OACA,sBAAKN,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACE,cAAC,EAAD,CACEF,cAAe0B,KAAK1B,cACpBC,cAAeyB,KAAKzB,mBAG1B,sBACA,cAAC,EAAD,CAAQO,KAAMkB,KAAKT,MAAMT,c,GAhCbmB,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9113d913.chunk.js","sourcesContent":["import React from 'react';\r\nimport './UserInput.css';\r\n\r\nconst UserInput = ({onInputChange, onClickButton}) => {\r\n\treturn(\r\n\t\t<div className=\"wrapperInput\">\r\n\t        <input \r\n\t        \tonChange={onInputChange}\r\n\t        \ttype=\"search\" \r\n\t        \tplaceholder=\"number/type\"/>\r\n\t        <button onClick={onClickButton} type=\"submit\">Get Fact</button>\r\n      \t</div>\r\n\t);\r\n}\r\n\r\nexport default UserInput;","import React from 'react';\r\nimport './Output.css';\r\n\r\nconst Output = ({fact}) => {\r\n\treturn(\r\n\t\t<div className=\"wrapperOutput\">\r\n        \t<h2>Fact:</h2>\r\n        \t<br />\r\n          \t<p>{fact}</p>\r\n      \t</div>\r\n\t);\r\n}\r\n\r\nexport default Output;","import React from 'react';\r\nimport './Explanation.css';\r\n\r\n\r\nconst Explanation = () => {\r\n\treturn(\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<h1>Fun Number Facts</h1>\r\n\t      \t<div className=\"description\">\r\n\t\t        <p>\r\n\t\t          Get a fact by entering a number and a type in the form <strong>number/type</strong>.\r\n\t\t        </p>\r\n\t\t        <p className=\"removeSpace\">\r\n\t\t          A number can be\r\n\t\t        </p>\r\n\t\t        <ul className=\"list\">\r\n\t\t          <li>integer,</li>\r\n\t\t          <li>random, or</li>\r\n\t\t          <li>a day of year (form: month/day).</li>\r\n\t\t        </ul>\r\n\t\t        <p className=\"removeSpace\">\r\n\t\t          Type is optional and can be omitted.<br />\r\n\t\t          Possible values are\r\n\t\t        </p>\r\n\t\t        <ul className=\"list2\">\r\n\t\t          <li>trivia,</li>\r\n\t\t          <li>math,</li>\r\n\t\t          <li>date, or</li>\r\n\t\t          <li>year.</li>\r\n\t\t        </ul>\r\n\t\t        <p className=\"removeSpaceTop\">\r\n\t\t          Trivia is chosen if type is omitted.\r\n\t\t        </p>\r\n\t\t        <p className=\"removeSpaceTop\">\r\n\t\t          Examples: 5/math or random/date\r\n\t\t        </p>\r\n\t      \t</div>\r\n\t  \t</div>\r\n  \t);\r\n}\r\n\r\nexport default Explanation;","import React, {Component} from 'react';\nimport UserInput from './components/UserInput/UserInput';\nimport Output from './components/Output/Output';\nimport Explanation from './components/Explanation/Explanation';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n        input: '',\n        fact: ''\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onClickButton = (event) => {\n    const url = 'http://numbersapi.com/' + this.state.input.trim() + '?json';  \n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({fact: data.text})) \n      .catch(() => this.setState({fact: 'Please enter a valid form.'}))\n  }\n\n  render (){\n    return(\n    <div className=\"App\">\n      <div className=\"container\">     \n        <Explanation />\n          <UserInput \n            onInputChange={this.onInputChange} \n            onClickButton={this.onClickButton}\n          />\n      </div>\n      <p />\n      <Output fact={this.state.fact}/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}